/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.empresaurios.uv.desktoprest;

import com.google.gson.Gson;
import java.awt.HeadlessException;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.ParseException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.client.methods.HttpDelete;
import org.apache.http.client.methods.HttpPut;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.HttpClientBuilder;
import org.apache.http.util.EntityUtils;

/**
 *
 * @author Luis Angel
 */
public class personasFrame extends javax.swing.JInternalFrame {

    /**
     * Creates new form personasFrame
     */
    
    Object[][] datos = {};
    DefaultTableModel modelo = (new DefaultTableModel(null, new String[]{
        "Clave", "Nombre",
        "Direccion", "Telefono"}));
    

    public personasFrame() {
        initComponents();
        this.setTitle("Personas");
        llenarTablaInicio(conexionGet());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtClave = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        jToolBar1 = new javax.swing.JToolBar();
        btoGuardar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        btoEliminar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        btoEditar = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable(modelo);

        setBackground(new java.awt.Color(255, 255, 255));
        setClosable(true);
        setMinimumSize(new java.awt.Dimension(595, 408));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("Clave: ");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Nombre: ");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Direccion: ");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Telefono");

        jToolBar1.setBackground(new java.awt.Color(48, 63, 159));
        jToolBar1.setRollover(true);

        btoGuardar.setBackground(new java.awt.Color(48, 63, 159));
        btoGuardar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btoGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/contents/icons8-de-acuerdo-48.png"))); // NOI18N
        btoGuardar.setFocusable(false);
        btoGuardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btoGuardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btoGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btoGuardarActionPerformed(evt);
            }
        });
        jToolBar1.add(btoGuardar);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("   Guardar    ");
        jLabel8.setToolTipText("Agrega los datos y presiona el boton");
        jToolBar1.add(jLabel8);

        btoEliminar.setBackground(new java.awt.Color(48, 63, 159));
        btoEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/contents/icons8-eliminar-48.png"))); // NOI18N
        btoEliminar.setFocusable(false);
        btoEliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btoEliminar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btoEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btoEliminarActionPerformed(evt);
            }
        });
        jToolBar1.add(btoEliminar);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("   Eliminar   ");
        jLabel9.setToolTipText("Ingresa la clave en el campo y presiona el boton");
        jToolBar1.add(jLabel9);

        btoEditar.setBackground(new java.awt.Color(48, 63, 159));
        btoEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/contents/icons8-editar-48.png"))); // NOI18N
        btoEditar.setFocusable(false);
        btoEditar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btoEditar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btoEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btoEditarActionPerformed(evt);
            }
        });
        jToolBar1.add(btoEditar);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("   Actualizar");
        jToolBar1.add(jLabel10);

        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 725, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtClave, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNombre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(txtClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 117, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btoGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btoGuardarActionPerformed
        agregarPersona();
        llenarTabla(conexionGet());
    }//GEN-LAST:event_btoGuardarActionPerformed

    private void btoEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btoEliminarActionPerformed
        conexionDelete();
        llenarTabla(conexionGet());
    }//GEN-LAST:event_btoEliminarActionPerformed

    private void btoEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btoEditarActionPerformed
        editarPersona();
        llenarTabla(conexionGet());
    }//GEN-LAST:event_btoEditarActionPerformed

    public void agregarPersona() {
        if ("".equals(txtClave.getText())) {
            JOptionPane.showMessageDialog(null, "No puede ir el campo clave vacio");
        } else {
            Persona persona = new Persona();
            persona.setClave(txtClave.getText());
            persona.setNombre(txtNombre.getText());
            persona.setDireccion(txtDireccion.getText());
            persona.setTelefono(txtTelefono.getText());
            conexionPost(persona);
        }
    }

    public void editarPersona() {
        if ("".equals(txtClave.getText())) {
            JOptionPane.showMessageDialog(null, "No puede ir el campo clave vacio");
        } else {
            Persona persona = new Persona();
            persona.setClave(txtClave.getText());
            persona.setNombre(txtNombre.getText());
            persona.setDireccion(txtDireccion.getText());
            persona.setTelefono(txtTelefono.getText());
            conexionPut(persona);
        }

    }

    public void conexionPost(Persona persona) {
        HttpClient httpClient = HttpClientBuilder.create().build();
        try {
            Gson json = new Gson();
            HttpPost post = new HttpPost("http://192.168.1.84:8095/api/personas"); 
            StringEntity postingString = new StringEntity(json.toJson(persona));
            post.setEntity(postingString);
            post.setHeader("Content-type", "application/json");
            httpClient.execute(post);
            JOptionPane.showMessageDialog(null, "Se agrego correctamente");
        } catch (HeadlessException | IOException e) {
            JOptionPane.showMessageDialog(null, "Hubo un error: " + e.getMessage());
        } finally {
            httpClient.getConnectionManager().shutdown();
            txtClave.setText("");
            txtNombre.setText("");
            txtDireccion.setText("");
            txtTelefono.setText("");
        }
    }

    public Persona[] conexionGet() {
        HttpClient httpClient = HttpClientBuilder.create().build();
        try {
            HttpGet get = new HttpGet("http://192.168.1.84:8095/api/personas");
            get.addHeader("accept", "application/json");
            HttpResponse response = httpClient.execute(get);
            HttpEntity httpEntity = response.getEntity();
            String json = EntityUtils.toString(httpEntity);
            Gson gson = new Gson();
            Persona[] lstPersonas = gson.fromJson(json, Persona[].class);
            return lstPersonas;
        } catch (IOException | ParseException e) {
            httpClient.getConnectionManager().shutdown();
            JOptionPane.showMessageDialog(null, "Hubo un error: " + e.getMessage());
            return null;
        }
    }

    public void conexionDelete() {
        HttpClient httpClient = HttpClientBuilder.create().build();
        try {
            String id = txtClave.getText();
            HttpDelete delete = new HttpDelete("http://192.168.1.84:8095/api/personas/" + id);
            httpClient.execute(delete);
            JOptionPane.showMessageDialog(null, "Se elimino correctamente");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Hubo un error: " + e.getMessage());
        } finally {
            httpClient.getConnectionManager().shutdown();
            txtClave.setText("");
            txtNombre.setText("");
            txtDireccion.setText("");
            txtTelefono.setText("");
        }
    }

    public void conexionPut(Persona persona) {
        HttpClient httpClient = HttpClientBuilder.create().build();
        try {
            Gson json = new Gson();
            HttpPut put = new HttpPut("http://192.168.1.84:8095/api/personas");
            StringEntity putingString = new StringEntity(json.toJson(persona));
            put.setEntity(putingString);
            put.setHeader("Content-type", "application/json");
            httpClient.execute(put);
            JOptionPane.showMessageDialog(null, "Se actualizo correctamente");
        } catch (HeadlessException | IOException e) {
            JOptionPane.showMessageDialog(null, "Hubo un error: " + e.getMessage());
        } finally {
            httpClient.getConnectionManager().shutdown();
            txtClave.setText("");
            txtNombre.setText("");
            txtDireccion.setText("");
            txtTelefono.setText("");
        }
    }

    public void llenarTabla(Persona[] lstPersonas) {
        for (int i = 0; i < lstPersonas.length; i++) {
            jTable1.setValueAt(lstPersonas[i].getClave(), i, 0);
            jTable1.setValueAt(lstPersonas[i].getNombre(), i, 1);
            jTable1.setValueAt(lstPersonas[i].getDireccion(), i, 2);
            jTable1.setValueAt(lstPersonas[i].getTelefono(), i, 3);
        }
    }
    
    public void llenarTablaInicio(Persona[] lstPersonas) {
        Object O[] = null;
        for (int i = 0; i < lstPersonas.length; i++) {
            modelo.addRow(O);
            jTable1.setValueAt(lstPersonas[i].getClave(), i, 0);
            jTable1.setValueAt(lstPersonas[i].getNombre(), i, 1);
            jTable1.setValueAt(lstPersonas[i].getDireccion(), i, 2);
            jTable1.setValueAt(lstPersonas[i].getTelefono(), i, 3);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btoEditar;
    private javax.swing.JButton btoEliminar;
    private javax.swing.JButton btoGuardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTextField txtClave;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
